org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.baseflow.geolocator.GeolocatorPlugin
androidx.core.app.RemoteActionCompatParcelizer
com.baseflow.geolocator.permission.PermissionManager
com.baseflow.geolocator.R
com.baseflow.geolocator.location.LocationManagerClient$1
androidx.window.extensions.core.util.function.Predicate
io.flutter.plugins.pathprovider.PathProviderPlugin
com.google.android.gms.common.ErrorDialogFragment
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.baseflow.geolocator.location.NmeaClient
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
androidx.versionedparcelable.CustomVersionedParcelable
com.baseflow.geolocator.location.ServiceStatus
io.flutter.view.TextureRegistry$SurfaceProducer
com.baseflow.geolocator.MethodCallHandlerImpl
com.baseflow.geolocator.location.LocationAccuracyManager
com.baseflow.geolocator.GeolocatorPlugin$1
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.example.flutter_application_2.MainActivity
io.flutter.view.FlutterCallbackInformation
com.baseflow.geolocator.location.LocationMapper
xyz.luan.audioplayers.AudioplayersPlugin
com.google.android.gms.common.SupportErrorDialogFragment
com.baseflow.geolocator.GeolocatorLocationService
com.baseflow.geolocator.errors.ErrorCallback
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
com.baseflow.geolocator.StreamHandlerImpl
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.android.gms.location.LocationResult
androidx.core.app.RemoteActionCompat
com.baseflow.geolocator.location.LocationManagerClient
androidx.profileinstaller.ProfileInstallReceiver
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
androidx.webkit.WebViewClientCompat
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport
com.baseflow.geolocator.location.LocationServiceListener
com.google.android.gms.common.api.Scope
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface
org.chromium.support_lib_boundary.PrefetchOperationResultBoundaryInterface
androidx.lifecycle.ReportFragment
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
androidx.versionedparcelable.ParcelImpl
org.chromium.support_lib_boundary.StaticsBoundaryInterface
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
com.google.android.gms.common.api.Status
androidx.lifecycle.ProcessLifecycleInitializer
com.tekartik.sqflite.SqflitePlugin
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1
io.flutter.plugins.urllauncher.UrlLauncherPlugin
com.google.android.gms.common.api.internal.zzd
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus
com.google.android.gms.common.api.internal.LifecycleCallback
com.google.android.gms.common.GooglePlayServicesManifestException
com.baseflow.geolocator.location.FusedLocationClient
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback
com.baseflow.geolocator.location.LocationOptions
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
com.baseflow.geolocator.location.LocationAccuracyStatus
com.baseflow.geolocator.location.NmeaClient$1
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements
com.baseflow.geolocator.permission.PermissionUtils
io.flutter.plugins.urllauncher.WebViewActivity
com.google.android.gms.common.api.internal.BasePendingResult
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
androidx.startup.InitializationProvider
com.google.android.gms.common.util.DynamiteApi
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType
io.flutter.plugin.platform.SingleViewPresentation
org.chromium.support_lib_boundary.PrefetchParamsBoundaryInterface
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
com.baseflow.geolocator.location.ForegroundNotificationOptions
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface
kotlinx.coroutines.android.AndroidDispatcherFactory
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.core.app.CoreComponentFactory
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.baseflow.geolocator.permission.PermissionResultCallback
io.flutter.embedding.engine.FlutterOverlaySurface
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.google.android.gms.common.annotation.KeepName
com.google.android.gms.location.LocationAvailability
androidx.lifecycle.SavedStateHandlesVM
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
io.flutter.view.AccessibilityViewEmbedder
androidx.annotation.Keep
androidx.fragment.app.DialogFragment
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback
com.google.android.gms.common.api.internal.zzb
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.google.android.gms.common.internal.ReflectedParcelable
androidx.core.graphics.drawable.IconCompatParcelizer
com.baseflow.geolocator.location.GeolocationManager
com.baseflow.geolocator.location.FusedLocationClient$1
com.baseflow.geolocator.errors.ErrorCodes
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants
com.baseflow.geolocator.location.LocationServiceStatusReceiver
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
io.flutter.view.TextureRegistry$ImageConsumer
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$SpeculativeLoadingStatus
androidx.browser.browseractions.BrowserActionsFallbackMenuView
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
io.flutter.plugins.GeneratedPluginRegistrant
com.baseflow.geolocator.LocationServiceHandlerImpl
com.baseflow.geolocator.location.BackgroundNotification
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants$ProcessGlobalConfigMapKey
androidx.core.graphics.drawable.IconCompat
androidx.lifecycle.ProcessLifecycleOwner$attach$1
io.flutter.plugin.text.ProcessTextPlugin
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior
com.baseflow.geolocator.GeolocatorLocationService$LocalBinder
com.baseflow.geolocator.location.AndroidIconResource
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
com.baseflow.geolocator.location.FlutterLocationServiceListener
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
com.baseflow.geolocator.permission.LocationPermission
androidx.window.extensions.core.util.function.Function
com.baseflow.geolocator.location.FusedLocationClient$2
org.chromium.support_lib_boundary.PrefetchStatusCodeBoundaryInterface
com.baseflow.geolocator.location.LocationAccuracy
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface
com.google.android.gms.location.LocationRequest
com.baseflow.geolocator.utils.Utils
io.flutter.view.TextureRegistry$GLTextureConsumer
com.google.android.gms.common.api.GoogleApiActivity
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.baseflow.geolocator.location.LocationClient
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
io.flutter.embedding.engine.FlutterJNI
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
android.support.v4.app.RemoteActionCompatParcelizer
androidx.profileinstaller.ProfileInstallerInitializer
io.flutter.view.TextureRegistry$SurfaceTextureEntry
com.baseflow.geolocator.errors.PermissionUndefinedException
io.flutter.view.TextureRegistry$ImageTextureEntry
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements
org.chromium.support_lib_boundary.ProfileBoundaryInterface
androidx.window.extensions.core.util.function.Consumer
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin
com.baseflow.geolocator.location.PositionChangedCallback
androidx.lifecycle.ReportFragment$LifecycleCallbacks
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.PositionChangedCallback positionChangedCallback
org.chromium.support_lib_boundary.PrefetchStatusCodeBoundaryInterface: int SUCCESS
com.baseflow.geolocator.GeolocatorLocationService: com.baseflow.geolocator.location.GeolocationManager geolocationManager
com.baseflow.geolocator.GeolocatorPlugin$1: com.baseflow.geolocator.GeolocatorPlugin this$0
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.location.PositionChangedCallback positionChangedCallback
com.baseflow.geolocator.location.LocationManagerClient$1: int[] $SwitchMap$com$baseflow$geolocator$location$LocationAccuracy
kotlinx.coroutines.CancelledContinuation: int _resumed
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes permissionDefinitionsNotFound
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.PrefetchStatusCodeBoundaryInterface: int FAILURE
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] $VALUES
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.baseflow.geolocator.location.LocationOptions: long timeInterval
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int WEB_SOURCE_AND_WEB_TRIGGER
com.google.android.gms.internal.location.zzei: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.StreamHandlerImpl: java.lang.String TAG
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus: int ENABLED
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean enableWifiLock
com.baseflow.geolocator.location.FusedLocationClient: android.content.Context context
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean released
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
kotlinx.coroutines.CompletedExceptionally: int _handled
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.Object lock
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes locationServicesDisabled
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.baseflow.geolocator.location.GeolocationManager: com.baseflow.geolocator.location.GeolocationManager geolocationManagerInstance
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy medium
com.baseflow.geolocator.location.ForegroundNotificationOptions: com.baseflow.geolocator.location.AndroidIconResource notificationIcon
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean ignoringFence
com.baseflow.geolocator.GeolocatorLocationService: int listenerCount
com.baseflow.geolocator.location.BackgroundNotification: java.lang.Integer notificationId
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.baseflow.geolocator.location.NmeaClient: boolean listenerAdded
com.baseflow.geolocator.GeolocatorLocationService: com.baseflow.geolocator.GeolocatorLocationService$LocalBinder binder
com.baseflow.geolocator.location.BackgroundNotification: androidx.core.app.NotificationCompat$Builder builder
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean VERBOSE_LOGS
com.baseflow.geolocator.StreamHandlerImpl: com.baseflow.geolocator.permission.PermissionManager permissionManager
com.baseflow.geolocator.GeolocatorLocationService: java.lang.String WIFILOCK_TAG
com.baseflow.geolocator.LocationServiceHandlerImpl: io.flutter.plugin.common.EventChannel channel
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.StreamHandlerImpl streamHandler
com.baseflow.geolocator.MethodCallHandlerImpl: java.lang.String TAG
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CACHE_DIRECTORY_BASE_PATH
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] $VALUES
com.google.android.gms.internal.location.zzl: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.errors.ErrorCallback errorCallback
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport: int BROWSER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CONFIGURE_PARTITIONED_COOKIES
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.baseflow.geolocator.location.AndroidIconResource: java.lang.String defType
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.GeolocatorLocationService foregroundLocationService
com.baseflow.geolocator.GeolocatorPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding pluginBinding
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean createNewReader
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.errors.ErrorCallback errorCallback
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.baseflow.geolocator.GeolocatorLocationService$LocalBinder: com.baseflow.geolocator.GeolocatorLocationService locationService
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.LocationServiceHandlerImpl locationServiceHandler
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission denied
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean newFrameAvailable
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean setOngoing
com.baseflow.geolocator.location.NmeaClient: com.baseflow.geolocator.location.LocationOptions locationOptions
com.baseflow.geolocator.GeolocatorLocationService$LocalBinder: com.baseflow.geolocator.GeolocatorLocationService this$0
com.baseflow.geolocator.location.LocationManagerClient: android.content.Context context
com.baseflow.geolocator.StreamHandlerImpl: android.content.Context context
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.String TAG
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int APP_SOURCE_AND_APP_TRIGGER
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.baseflow.geolocator.location.GeolocationManager: java.util.List locationClients
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.google.android.gms.location.LastLocationRequest: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.baseflow.geolocator.location.FusedLocationClient$2: int[] $SwitchMap$com$baseflow$geolocator$location$LocationAccuracy
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.baseflow.geolocator.location.FusedLocationClient$1: android.content.Context val$context
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String notificationText
com.baseflow.geolocator.location.AndroidIconResource: java.lang.String name
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id
com.baseflow.geolocator.location.BackgroundNotification: java.lang.String channelId
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
io.flutter.embedding.engine.FlutterJNI: float displayDensity
com.baseflow.geolocator.StreamHandlerImpl: com.baseflow.geolocator.location.GeolocationManager geolocationManager
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastDequeueTime
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$SpeculativeLoadingStatus: int DISABLED
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.permission.PermissionResultCallback resultCallback
kotlinx.coroutines.channels.BufferedChannel: long receivers
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.baseflow.geolocator.location.NmeaClient: java.lang.String lastNmeaMessage
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.baseflow.geolocator.location.LocationManagerClient: android.location.LocationManager locationManager
com.baseflow.geolocator.location.LocationOptions: boolean useMSLAltitude
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
com.baseflow.geolocator.permission.PermissionManager: int PERMISSION_REQUEST_CODE
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus: int DISABLED
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.Integer color
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus: int ENABLED_WITHOUT_APP_IDENTITY
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.location.LocationAccuracyManager locationAccuracyManager
com.baseflow.geolocator.location.FlutterLocationServiceListener: io.flutter.plugin.common.MethodChannel$Result result
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_BASE_PATH
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.location.GeolocationManager geolocationManager
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.baseflow.geolocator.location.NmeaClient$1: com.baseflow.geolocator.location.NmeaClient this$0
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean enableWakeLock
com.baseflow.geolocator.location.LocationServiceStatusReceiver: com.baseflow.geolocator.location.ServiceStatus lastKnownServiceStatus
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.baseflow.geolocator.GeolocatorPlugin: java.lang.String TAG
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.baseflow.geolocator.GeolocatorLocationService: com.baseflow.geolocator.location.BackgroundNotification backgroundNotification
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus enabled
com.baseflow.geolocator.permission.PermissionManager: android.app.Activity activity
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean notifiedDestroy
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int APP_SOURCE_AND_WEB_TRIGGER
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.FusedLocationProviderClient fusedLocationProviderClient
com.google.android.gms.internal.location.zze: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.baseflow.geolocator.location.FusedLocationClient$1: com.baseflow.geolocator.location.FusedLocationClient this$0
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.MethodCallHandlerImpl: android.app.Activity activity
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedHeight
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.location.LocationOptions locationOptions
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.HashMap perImageReaders
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.location.NmeaClient nmeaClient
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.baseflow.geolocator.location.NmeaClient: java.lang.String NMEA_ALTITUDE_EXTRA
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus reduced
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.baseflow.geolocator.location.FusedLocationClient: int activityRequestCode
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String notificationTitle
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.baseflow.geolocator.GeolocatorLocationService: java.lang.String WAKELOCK_TAG
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_ARRAY_BUFFER
com.baseflow.geolocator.LocationServiceHandlerImpl: com.baseflow.geolocator.location.LocationServiceStatusReceiver receiver
com.google.android.gms.location.zzal: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.LocationOptions locationOptions
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.MethodCallHandlerImpl methodCallHandler
com.baseflow.geolocator.StreamHandlerImpl: com.baseflow.geolocator.GeolocatorLocationService foregroundLocationService
com.baseflow.geolocator.LocationServiceHandlerImpl: java.lang.String TAG
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int DISABLED
com.baseflow.geolocator.GeolocatorLocationService: android.app.Activity activity
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus precise
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastQueueTime
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy bestForNavigation
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean ignoringFence
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean trimOnMemoryPressure
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes permissionRequestInProgress
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] $VALUES
com.baseflow.geolocator.location.NmeaClient: android.content.Context context
kotlinx.coroutines.InvokeOnCancelling: int _invoked
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastScheduleTime
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] $VALUES
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy best
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.LocationServiceStatusReceiver: io.flutter.plugin.common.EventChannel$EventSink events
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
com.baseflow.geolocator.GeolocatorLocationService: int connectedEngines
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage
com.baseflow.geolocator.location.FusedLocationClient$1: com.baseflow.geolocator.location.LocationOptions val$locationOptions
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.ArrayDeque imageReaderQueue
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
io.flutter.embedding.engine.FlutterJNI: float displayHeight
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy high
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes activityMissing
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.location.LocationAccuracyManager locationAccuracyManager
com.baseflow.geolocator.location.LocationOptions: com.baseflow.geolocator.location.LocationAccuracy accuracy
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.NmeaClient: java.lang.String GNSS_SATELLITES_USED_IN_FIX_EXTRA
com.baseflow.geolocator.StreamHandlerImpl: io.flutter.plugin.common.EventChannel channel
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes permissionDenied
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.baseflow.geolocator.location.LocationManagerClient: java.lang.String currentLocationProvider
com.baseflow.geolocator.location.LocationOptions: java.lang.String USE_MSL_ALTITUDE_EXTRA
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.baseflow.geolocator.GeolocatorLocationService: android.os.PowerManager$WakeLock wakeLock
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus disabled
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationCallback locationCallback
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_SUFFIX
com.baseflow.geolocator.location.NmeaClient: java.lang.String GNSS_SATELLITE_COUNT_EXTRA
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
com.baseflow.geolocator.GeolocatorLocationService: java.lang.String TAG
com.baseflow.geolocator.StreamHandlerImpl: android.app.Activity activity
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
com.baseflow.geolocator.GeolocatorLocationService: java.lang.String CHANNEL_ID
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy lowest
io.flutter.plugin.platform.SingleViewPresentation: int viewId
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission always
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.baseflow.geolocator.location.NmeaClient: double gnss_satellite_count
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int MAX_IMAGES
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] $VALUES
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
com.baseflow.geolocator.location.FusedLocationClient: java.lang.String TAG
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.permission.PermissionManager permissionManager
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.baseflow.geolocator.MethodCallHandlerImpl: java.util.Map pendingCurrentPositionLocationClients
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_STRING
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport: int NONE
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.baseflow.geolocator.LocationServiceHandlerImpl: android.content.Context context
com.baseflow.geolocator.location.NmeaClient: android.location.OnNmeaMessageListener nmeaMessageListener
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String notificationChannelName
com.baseflow.geolocator.StreamHandlerImpl: com.baseflow.geolocator.location.LocationClient locationClient
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
com.baseflow.geolocator.location.BackgroundNotification: android.content.Context context
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean CLEANUP_ON_MEMORY_PRESSURE
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.NmeaClient nmeaClient
com.baseflow.geolocator.location.NmeaClient: java.util.Calendar lastNmeaMessageTime
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$SpeculativeLoadingStatus: int PRERENDER_ENABLED
com.baseflow.geolocator.location.LocationManagerClient: android.location.Location currentBestLocation
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.flutter.embedding.engine.FlutterJNI: float displayWidth
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
io.flutter.embedding.engine.FlutterOverlaySurface: int id
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.baseflow.geolocator.GeolocatorPlugin: android.content.ServiceConnection serviceConnection
com.baseflow.geolocator.location.NmeaClient: double gnss_satellites_used_in_fix
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport: int APP
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.baseflow.geolocator.GeolocatorLocationService: boolean isForeground
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
com.baseflow.geolocator.location.NmeaClient: android.location.GnssStatus$Callback gnssCallback
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes errorWhileAcquiringPosition
com.google.android.gms.internal.location.zzeg: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.permission.PermissionManager permissionManagerInstance
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.errors.ErrorCallback errorCallback
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.baseflow.geolocator.location.LocationManagerClient: long TWO_MINUTES
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission deniedForever
com.baseflow.geolocator.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.internal.location.zzee: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.LocationOptions: long distanceFilter
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.location.GeolocationManager geolocationManager
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedWidth
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.baseflow.geolocator.GeolocatorLocationService: com.baseflow.geolocator.location.LocationClient locationClient
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.baseflow.geolocator.GeolocatorLocationService: int ONGOING_NOTIFICATION_ID
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.permission.PermissionManager permissionManager
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
com.baseflow.geolocator.MethodCallHandlerImpl: android.content.Context context
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission whileInUse
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy low
com.baseflow.geolocator.location.NmeaClient: android.location.LocationManager locationManager
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.LocationAccuracyManager: com.baseflow.geolocator.location.LocationAccuracyManager locationAccuracyManagerInstance
com.baseflow.geolocator.GeolocatorLocationService: android.net.wifi.WifiManager$WifiLock wifiLock
com.baseflow.geolocator.location.LocationManagerClient: boolean isListening
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProfileStore()
com.baseflow.geolocator.location.PositionChangedCallback: void onPositionChanged(android.location.Location)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.baseflow.geolocator.location.LocationMapper: java.util.Map toHashMap(android.location.Location)
com.baseflow.geolocator.location.AndroidIconResource: java.lang.String getName()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics getViewportMetrics()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
com.baseflow.geolocator.location.LocationClient: void startPositionUpdates(android.app.Activity,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
io.flutter.view.TextureRegistry$ImageTextureEntry: void release()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader access$700(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] $values()
com.google.android.gms.common.api.internal.zzd: zzd()
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$800(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.baseflow.geolocator.StreamHandlerImpl: void lambda$onListen$0(io.flutter.plugin.common.EventChannel$EventSink,android.location.Location)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: double deltaMillis(long)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void removeRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.baseflow.geolocator.location.NmeaClient: void lambda$new$0(java.lang.String,long)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.baseflow.geolocator.location.FlutterLocationServiceListener: void onLocationServiceError(com.baseflow.geolocator.errors.ErrorCodes)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
androidx.window.layout.util.ContextCompatHelperApi30: androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context)
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
com.baseflow.geolocator.location.LocationOptions: boolean isUseMSLAltitude()
androidx.core.location.LocationManagerCompat$Api19Impl: boolean tryRequestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,androidx.core.location.LocationListenerCompat,android.os.Looper)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannelGroup)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: java.util.List getAllProfileNames()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)
com.baseflow.geolocator.location.BackgroundNotification: void updateNotification(com.baseflow.geolocator.location.ForegroundNotificationOptions,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void onDragEnd(boolean)
com.baseflow.geolocator.location.BackgroundNotification: android.app.Notification build()
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String getNotificationChannelName()
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationRequest buildLocationRequestDeprecated(com.baseflow.geolocator.location.LocationOptions)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onTrimMemory(int)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationSettingsRequest buildLocationSettingsRequest(com.google.android.gms.location.LocationRequest)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
com.baseflow.geolocator.location.LocationMapper: LocationMapper()
com.baseflow.geolocator.location.NmeaClient: NmeaClient(android.content.Context,com.baseflow.geolocator.location.LocationOptions)
com.baseflow.geolocator.StreamHandlerImpl: void lambda$onListen$1(io.flutter.plugin.common.EventChannel$EventSink,com.baseflow.geolocator.errors.ErrorCodes)
androidx.core.location.LocationCompat$Api26Impl: float getVerticalAccuracyMeters(android.location.Location)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes valueOf(java.lang.String)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus valueOf(java.lang.String)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.baseflow.geolocator.location.BackgroundNotification: void updateChannel(java.lang.String)
com.baseflow.geolocator.location.FusedLocationClient: int generateActivityRequestCode()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary(android.content.Context)
com.baseflow.geolocator.location.FusedLocationClient: void lambda$startPositionUpdates$3(android.app.Activity,com.baseflow.geolocator.errors.ErrorCallback,java.lang.Exception)
com.baseflow.geolocator.location.BackgroundNotification: int getDrawableId(java.lang.String,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void disableFenceForTest()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$502(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.baseflow.geolocator.location.LocationManagerClient: void onFlushComplete(int)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
androidx.lifecycle.ReportFragment: ReportFragment()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.baseflow.geolocator.GeolocatorPlugin$1: GeolocatorPlugin$1(com.baseflow.geolocator.GeolocatorPlugin)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
com.baseflow.geolocator.location.FusedLocationClient: void startPositionUpdates(android.app.Activity,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.core.app.ActivityCompat$Api31Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.baseflow.geolocator.utils.Utils: Utils()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: java.lang.String getAsString()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.window.extensions.core.util.function.Consumer: void accept(java.lang.Object)
androidx.core.location.LocationManagerCompat$Api31Impl: boolean registerGnssMeasurementsCallback(android.location.LocationManager,java.util.concurrent.Executor,android.location.GnssMeasurementsEvent$Callback)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setUserAgentMetadataFromMap(java.util.Map)
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean isEnableWakeLock()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Map getUserAgentMetadataMap()
com.baseflow.geolocator.permission.PermissionResultCallback: void onResult(com.baseflow.geolocator.permission.LocationPermission)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getAttributionBehavior()
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void reverse(android.animation.AnimatorSet)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeaturesInNative(int)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.permission.LocationPermission checkPermissionStatus(android.content.Context)
com.baseflow.geolocator.GeolocatorLocationService: void startLocationService(boolean,com.baseflow.geolocator.location.LocationOptions,io.flutter.plugin.common.EventChannel$EventSink)
com.baseflow.geolocator.GeolocatorPlugin: void deregisterListeners()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
com.baseflow.geolocator.location.NmeaClient: double access$102(com.baseflow.geolocator.location.NmeaClient,double)
com.baseflow.geolocator.permission.PermissionManager: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface: void remove()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.baseflow.geolocator.MethodCallHandlerImpl: void lambda$onRequestPermission$0(io.flutter.plugin.common.MethodChannel$Result,com.baseflow.geolocator.permission.LocationPermission)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void startRearDisplayPresentationSession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.fragment.app.DialogFragment: DialogFragment()
com.baseflow.geolocator.GeolocatorPlugin: void access$000(com.baseflow.geolocator.GeolocatorPlugin,com.baseflow.geolocator.GeolocatorLocationService)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.view.TextureRegistry$GLTextureConsumer: android.graphics.SurfaceTexture getSurfaceTexture()
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: void setPresentationView(android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: androidx.window.extensions.area.ExtensionWindowAreaPresentation getRearDisplayPresentation()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
com.baseflow.geolocator.location.BackgroundNotification: BackgroundNotification(android.content.Context,java.lang.String,java.lang.Integer,com.baseflow.geolocator.location.ForegroundNotificationOptions)
io.flutter.plugins.webviewflutter.WebViewProxyApi$WebViewPlatformView: android.webkit.WebChromeClient getWebChromeClient()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onImage(android.media.ImageReader,android.media.Image)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean handlesCropAndRotation()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getSpeculativeLoadingStatus()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] values()
com.baseflow.geolocator.GeolocatorLocationService: void setGeolocationManager(com.baseflow.geolocator.location.GeolocationManager)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
com.baseflow.geolocator.location.FusedLocationClient$1: void onLocationAvailability(com.google.android.gms.location.LocationAvailability)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.baseflow.geolocator.location.GeolocationManager: void isLocationServiceEnabled(android.content.Context,com.baseflow.geolocator.location.LocationServiceListener)
com.baseflow.geolocator.MethodCallHandlerImpl: void setActivity(android.app.Activity)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.baseflow.geolocator.StreamHandlerImpl: void stopListening()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
io.flutter.plugins.webviewflutter.FileChooserMode: io.flutter.plugins.webviewflutter.FileChooserMode[] values()
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.baseflow.geolocator.location.LocationClient: boolean checkLocationService(android.content.Context)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.Image acquireLatestImage()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void endRearDisplaySession()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void clearPrefetch(java.lang.String,android.webkit.ValueCallback)
androidx.core.location.LocationManagerCompat$Api31Impl: void requestLocationUpdates(android.location.LocationManager,java.lang.String,android.location.LocationRequest,java.util.concurrent.Executor,android.location.LocationListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.baseflow.geolocator.location.FusedLocationClient$1: FusedLocationClient$1(com.baseflow.geolocator.location.FusedLocationClient,com.baseflow.geolocator.location.LocationOptions,android.content.Context)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.browser.customtabs.CustomTabsIntent$Api34Impl: void setShareIdentityEnabled(android.app.ActivityOptions,boolean)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
com.baseflow.geolocator.permission.PermissionManager: boolean hasBackgroundAccess(java.lang.String[],int[])
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void release()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.baseflow.geolocator.location.FusedLocationClient: void lambda$startPositionUpdates$2(com.google.android.gms.location.LocationSettingsResponse)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.view.Surface getSurface()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void releaseInternal()
com.baseflow.geolocator.location.NmeaClient: double access$000(com.baseflow.geolocator.location.NmeaClient)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.baseflow.geolocator.MethodCallHandlerImpl: MethodCallHandlerImpl(com.baseflow.geolocator.permission.PermissionManager,com.baseflow.geolocator.location.GeolocationManager,com.baseflow.geolocator.location.LocationAccuracyManager)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
io.flutter.view.TextureRegistry$SurfaceProducer: boolean handlesCropAndRotation()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void cleanup()
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
com.baseflow.geolocator.location.LocationManagerClient: void onProviderDisabled(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
com.baseflow.geolocator.location.FusedLocationClient: void requestPositionUpdates(com.baseflow.geolocator.location.LocationOptions)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] $values()
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.core.app.ActivityCompat$Api31Impl: boolean isLaunchedFromBubble(android.app.Activity)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebViewMediaIntegrityApiDefaultStatus()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.NmeaClient access$400(com.baseflow.geolocator.location.FusedLocationClient)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.baseflow.geolocator.location.FusedLocationClient: int toPriority(com.baseflow.geolocator.location.LocationAccuracy)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: long id()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void pruneImageReaderQueue()
com.baseflow.geolocator.location.LocationClient$-CC: boolean $default$checkLocationService(com.baseflow.geolocator.location.LocationClient,android.content.Context)
androidx.core.location.LocationCompat$Api26Impl: float getSpeedAccuracyMetersPerSecond(android.location.Location)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
com.baseflow.geolocator.GeolocatorPlugin: void bindForegroundService(android.content.Context)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
com.baseflow.geolocator.GeolocatorLocationService: GeolocatorLocationService()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setBackForwardCacheEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
com.baseflow.geolocator.location.ForegroundNotificationOptions: com.baseflow.geolocator.location.AndroidIconResource getNotificationIcon()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void waitOnFence(android.media.Image)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
xyz.luan.audioplayers.AudioplayersPlugin: AudioplayersPlugin()
io.flutter.view.TextureRegistry$SurfaceProducer: void release()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.errors.ErrorCallback access$300(com.baseflow.geolocator.location.FusedLocationClient)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.baseflow.geolocator.GeolocatorLocationService: boolean canStopLocationService(boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setAudioMuted(boolean)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.baseflow.geolocator.location.NmeaClient$1: void onSatelliteStatusChanged(android.location.GnssStatus)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.window.extensions.core.util.function.Function: java.lang.Object apply(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabledInNative(boolean)
com.baseflow.geolocator.errors.PermissionUndefinedException: PermissionUndefinedException()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.baseflow.geolocator.permission.PermissionUtils: boolean hasPermissionInManifest(android.content.Context,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.view.TextureRegistry$SurfaceProducer: android.view.Surface getSurface()
com.baseflow.geolocator.location.LocationManagerClient: void getLastKnownPosition(com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.baseflow.geolocator.LocationServiceHandlerImpl: void stopListening()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void setClearCachedDataIntervalMs(int)
com.baseflow.geolocator.location.BackgroundNotification: android.app.PendingIntent buildBringToFrontIntent()
com.baseflow.geolocator.location.FusedLocationClient$1: void onLocationResult(com.google.android.gms.location.LocationResult)
com.baseflow.geolocator.GeolocatorLocationService: int onStartCommand(android.content.Intent,int,int)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannel(android.app.NotificationManager,android.app.NotificationChannel)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
xyz.luan.audioplayers.PlayerMode: xyz.luan.audioplayers.PlayerMode valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: boolean isAudioMuted()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.baseflow.geolocator.location.FusedLocationClient: void getLastKnownPosition(com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannelGroups(android.app.NotificationManager)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAttributionBehavior(int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.baseflow.geolocator.location.LocationAccuracyManager: com.baseflow.geolocator.location.LocationAccuracyManager getInstance()
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] values()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessageWithPayload(java.lang.reflect.InvocationHandler)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
com.baseflow.geolocator.location.LocationServiceListener: void onLocationServiceResult(boolean)
io.flutter.plugins.webviewflutter.WebViewProxyApi$WebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: byte[] getAsArrayBuffer()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.baseflow.geolocator.GeolocatorLocationService: void releaseWakeLocks()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
com.baseflow.geolocator.MethodCallHandlerImpl: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.baseflow.geolocator.location.LocationOptions: LocationOptions(com.baseflow.geolocator.location.LocationAccuracy,long,long,boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImageReaders()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.core.location.LocationManagerCompat$Api19Impl: boolean tryRequestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,androidx.core.location.LocationManagerCompat$LocationListenerTransport)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.baseflow.geolocator.location.GeolocationManager: void getLastKnownPosition(android.content.Context,boolean,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.baseflow.geolocator.location.GeolocationManager: void stopPositionUpdates(com.baseflow.geolocator.location.LocationClient)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void waitOnFence(android.media.Image)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.baseflow.geolocator.location.LocationAccuracy: LocationAccuracy(java.lang.String,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.baseflow.geolocator.MethodCallHandlerImpl: void onIsLocationServiceEnabled(io.flutter.plugin.common.MethodChannel$Result)
com.tekartik.sqflite.SqflitePlugin: SqflitePlugin()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.baseflow.geolocator.GeolocatorLocationService: void flutterEngineConnected()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
kotlin.random.Random: Random()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.location.LocationCompat$Api26Impl: boolean hasBearingAccuracy(android.location.Location)
com.google.android.gms.common.ErrorDialogFragment: ErrorDialogFragment()
com.baseflow.geolocator.location.LocationOptions: long getDistanceFilter()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
com.baseflow.geolocator.GeolocatorLocationService$LocalBinder: GeolocatorLocationService$LocalBinder(com.baseflow.geolocator.GeolocatorLocationService,com.baseflow.geolocator.GeolocatorLocationService)
com.baseflow.geolocator.location.FusedLocationClient: void stopPositionUpdates()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.baseflow.geolocator.location.AndroidIconResource: AndroidIconResource(java.lang.String,java.lang.String)
androidx.core.location.LocationManagerCompat$Api31Impl: boolean hasProvider(android.location.LocationManager,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void addRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
io.flutter.plugins.webviewflutter.ConsoleMessageLevel: io.flutter.plugins.webviewflutter.ConsoleMessageLevel valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.baseflow.geolocator.permission.PermissionManager: java.util.List getLocationPermissionsFromManifest(android.content.Context)
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String getNotificationTitle()
com.baseflow.geolocator.location.LocationManagerClient: void startPositionUpdates(android.app.Activity,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
com.baseflow.geolocator.GeolocatorLocationService: void onCreate()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
androidx.core.location.LocationCompat$Api26Impl: boolean hasSpeedAccuracy(android.location.Location)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void markDirty()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroup(android.app.NotificationManager,android.app.NotificationChannelGroup)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getDropDataProvider()
io.flutter.plugins.webviewflutter.FileChooserMode: io.flutter.plugins.webviewflutter.FileChooserMode valueOf(java.lang.String)
com.baseflow.geolocator.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.baseflow.geolocator.permission.PermissionManager: boolean hasPermission(android.content.Context)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader33()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.baseflow.geolocator.location.ForegroundNotificationOptions: com.baseflow.geolocator.location.ForegroundNotificationOptions parseArguments(java.util.Map)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannel)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: UrlLauncherPlugin()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void scheduleFrame()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
com.baseflow.geolocator.GeolocatorPlugin$1: void onServiceDisconnected(android.content.ComponentName)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.core.location.LocationRequestCompat$Api31Impl: android.location.LocationRequest toLocationRequest(androidx.core.location.LocationRequestCompat)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.baseflow.geolocator.GeolocatorLocationService: void changeNotificationOptions(com.baseflow.geolocator.location.ForegroundNotificationOptions)
com.baseflow.geolocator.GeolocatorLocationService: void flutterEngineDisconnected()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.baseflow.geolocator.StreamHandlerImpl: void disposeListeners(boolean)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.baseflow.geolocator.StreamHandlerImpl: StreamHandlerImpl(com.baseflow.geolocator.permission.PermissionManager,com.baseflow.geolocator.location.GeolocationManager)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.baseflow.geolocator.MethodCallHandlerImpl: void lambda$onGetLastKnownPosition$4(io.flutter.plugin.common.MethodChannel$Result,com.baseflow.geolocator.errors.ErrorCodes)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroups(android.app.NotificationManager,java.util.List)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.baseflow.geolocator.location.LocationAccuracyManager: LocationAccuracyManager()
com.baseflow.geolocator.utils.Utils: boolean openAppSettings(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAlgorithmicDarkeningAllowed(boolean)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
org.chromium.support_lib_boundary.PrefetchParamsBoundaryInterface: java.util.Map getAdditionalHeaders()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
io.flutter.embedding.android.FlutterView: void setDelegate(io.flutter.embedding.android.FlutterViewDelegate)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.baseflow.geolocator.GeolocatorPlugin: void initialize(com.baseflow.geolocator.GeolocatorLocationService)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.gms.common.api.internal.zzb: zzb()
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] $values()
com.baseflow.geolocator.location.FusedLocationClient: void lambda$getLastKnownPosition$1(com.baseflow.geolocator.errors.ErrorCallback,java.lang.Exception)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationRequest buildLocationRequest(com.baseflow.geolocator.location.LocationOptions)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.baseflow.geolocator.LocationServiceHandlerImpl: void onCancel(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.baseflow.geolocator.location.LocationManagerClient: boolean onActivityResult(int,int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.permission.PermissionManager getInstance()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
io.flutter.view.TextureRegistry$SurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.baseflow.geolocator.GeolocatorLocationService: void obtainWakeLocks(com.baseflow.geolocator.location.ForegroundNotificationOptions)
androidx.core.app.ActivityCompat$Api32Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.baseflow.geolocator.location.ForegroundNotificationOptions: ForegroundNotificationOptions(java.lang.String,java.lang.String,java.lang.String,com.baseflow.geolocator.location.AndroidIconResource,boolean,boolean,boolean,java.lang.Integer)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
com.baseflow.geolocator.GeolocatorLocationService: int getWifiLockType()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.baseflow.geolocator.MethodCallHandlerImpl: void onGetCurrentPosition(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
io.flutter.embedding.engine.FlutterJNI: void scheduleFrame()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
com.baseflow.geolocator.location.LocationClient: void getLastKnownPosition(com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
androidx.window.extensions.core.util.function.Predicate: boolean test(java.lang.Object)
com.baseflow.geolocator.location.FusedLocationClient: void isLocationServiceEnabled(com.baseflow.geolocator.location.LocationServiceListener)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannels(android.app.NotificationManager)
com.baseflow.geolocator.GeolocatorPlugin: void registerListeners()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.baseflow.geolocator.location.AndroidIconResource: java.lang.String getDefType()
com.baseflow.geolocator.StreamHandlerImpl: void onCancel(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy valueOf(java.lang.String)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.GeolocationPermissions getGeoLocationPermissions()
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
com.baseflow.geolocator.GeolocatorLocationService: void enableBackgroundMode(com.baseflow.geolocator.location.ForegroundNotificationOptions)
androidx.startup.InitializationProvider: InitializationProvider()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] values()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.FusedLocationProviderClient access$200(com.baseflow.geolocator.location.FusedLocationClient)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImages()
com.baseflow.geolocator.GeolocatorPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setProfile(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.baseflow.geolocator.permission.PermissionUtils: android.content.pm.PackageInfo getPackageInfo(android.content.Context)
com.baseflow.geolocator.location.LocationAccuracyStatus: LocationAccuracyStatus(java.lang.String,int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
io.flutter.embedding.engine.FlutterJNI: boolean ShouldDisableAHB()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void release()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.ParcelFileDescriptor openFile(android.content.ContentProvider,android.net.Uri)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.baseflow.geolocator.MethodCallHandlerImpl: void lambda$onRequestPermission$1(io.flutter.plugin.common.MethodChannel$Result,com.baseflow.geolocator.errors.ErrorCodes)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getEnterpriseAuthenticationAppLinkPolicyEnabled()
io.flutter.plugins.webviewflutter.WebViewProxyApi$WebViewPlatformView: android.view.View getView()
com.baseflow.geolocator.location.FusedLocationClient: void lambda$isLocationServiceEnabled$0(com.baseflow.geolocator.location.LocationServiceListener,com.google.android.gms.tasks.Task)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: java.lang.String getName()
androidx.core.location.LocationCompat$Api26Impl: void setVerticalAccuracyMeters(android.location.Location,float)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
com.baseflow.geolocator.location.NmeaClient: double access$002(com.baseflow.geolocator.location.NmeaClient,double)
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: java.lang.reflect.InvocationHandler getProfile(java.lang.String)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.GeolocatorLocationService access$102(com.baseflow.geolocator.GeolocatorPlugin,com.baseflow.geolocator.GeolocatorLocationService)
xyz.luan.audioplayers.ReleaseMode: xyz.luan.audioplayers.ReleaseMode valueOf(java.lang.String)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.baseflow.geolocator.errors.ErrorCodes: java.lang.String toString()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.baseflow.geolocator.GeolocatorPlugin: void dispose()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
xyz.luan.audioplayers.ReleaseMode: xyz.luan.audioplayers.ReleaseMode[] values()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.core.location.LocationCompat$Api26Impl: void removeBearingAccuracy(android.location.Location)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.baseflow.geolocator.permission.LocationPermission: int toInt()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: WebViewFlutterPlugin()
com.baseflow.geolocator.LocationServiceHandlerImpl: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void prefetchUrl(java.lang.String,android.webkit.ValueCallback)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.baseflow.geolocator.StreamHandlerImpl: void setActivity(android.app.Activity)
com.baseflow.geolocator.location.LocationManagerClient: void onLocationChanged(java.util.List)
com.baseflow.geolocator.location.GeolocationManager: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getHeight()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void prefetchUrl(java.lang.String,java.lang.reflect.InvocationHandler,android.webkit.ValueCallback)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
com.baseflow.geolocator.errors.ErrorCodes: java.lang.String toDescription()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
androidx.core.location.LocationCompat$Api26Impl: void setSpeedAccuracyMetersPerSecond(android.location.Location,float)
com.baseflow.geolocator.location.NmeaClient$1: NmeaClient$1(com.baseflow.geolocator.location.NmeaClient)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: android.content.Context getPresentationContext()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.baseflow.geolocator.location.LocationManagerClient: boolean isBetterLocation(android.location.Location,android.location.Location)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
com.baseflow.geolocator.GeolocatorLocationService: void onDestroy()
com.baseflow.geolocator.location.GeolocationManager: com.baseflow.geolocator.location.LocationClient createLocationClient(android.content.Context,boolean,com.baseflow.geolocator.location.LocationOptions)
com.baseflow.geolocator.location.LocationOptions: com.baseflow.geolocator.location.LocationAccuracy getAccuracy()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void cancelPrefetch(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getOrCreatePerImageReader(android.media.ImageReader)
com.baseflow.geolocator.GeolocatorLocationService: void lambda$startLocationService$0(io.flutter.plugin.common.EventChannel$EventSink,android.location.Location)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: int getType()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getWidth()
com.baseflow.geolocator.GeolocatorLocationService$LocalBinder: com.baseflow.geolocator.GeolocatorLocationService getLocationService()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeShouldDisableAHB()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getProfile()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: int getWindowAreaStatus()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$302(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,boolean)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
com.baseflow.geolocator.GeolocatorPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.baseflow.geolocator.LocationServiceHandlerImpl: void disposeListeners()
com.baseflow.geolocator.GeolocatorPlugin$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.PositionChangedCallback access$000(com.baseflow.geolocator.location.FusedLocationClient)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertCookieManager(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void endRearDisplayPresentationSession()
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromActivity()
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.baseflow.geolocator.location.LocationManagerClient: int accuracyToQuality(com.baseflow.geolocator.location.LocationAccuracy)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.baseflow.geolocator.location.GeolocationManager: boolean isGooglePlayServicesAvailable(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setSize(int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setEnterpriseAuthenticationAppLinkPolicyEnabled(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.core.graphics.drawable.IconCompat: IconCompat()
org.chromium.support_lib_boundary.PrefetchOperationResultBoundaryInterface: int getStatusCode()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener)
org.chromium.support_lib_boundary.PrefetchParamsBoundaryInterface: java.lang.String getNoVarySearchHint()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.baseflow.geolocator.location.NmeaClient: void start()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getActiveReader()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.baseflow.geolocator.location.LocationClient: boolean onActivityResult(int,int)
androidx.core.os.ConfigurationCompat$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.baseflow.geolocator.GeolocatorPlugin: GeolocatorPlugin()
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: java.lang.reflect.InvocationHandler getOrCreateProfile(java.lang.String)
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean isSetOngoing()
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface: java.util.List getCookieInfo(java.lang.String)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.baseflow.geolocator.StreamHandlerImpl: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.baseflow.geolocator.location.FlutterLocationServiceListener: void onLocationServiceResult(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.baseflow.geolocator.GeolocatorPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void removeRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.GeolocatorLocationService access$100(com.baseflow.geolocator.GeolocatorPlugin)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.baseflow.geolocator.GeolocatorLocationService: void stopLocationService()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
io.flutter.plugins.pathprovider.PathProviderPlugin: PathProviderPlugin()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.baseflow.geolocator.location.FusedLocationClient: boolean onActivityResult(int,int)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
com.baseflow.geolocator.location.LocationManagerClient: void isLocationServiceEnabled(com.baseflow.geolocator.location.LocationServiceListener)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.baseflow.geolocator.location.NmeaClient: double access$104(com.baseflow.geolocator.location.NmeaClient)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
androidx.browser.customtabs.CustomTabsIntent$Api24Impl: java.lang.String getDefaultLocale()
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader29()
com.baseflow.geolocator.GeolocatorLocationService: void setActivity(android.app.Activity)
com.baseflow.geolocator.location.FusedLocationClient: FusedLocationClient(android.content.Context,com.baseflow.geolocator.location.LocationOptions)
io.flutter.embedding.engine.FlutterJNI: void nativeScheduleFrame(long)
com.baseflow.geolocator.LocationServiceHandlerImpl: LocationServiceHandlerImpl()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
com.baseflow.geolocator.LocationServiceHandlerImpl: void setContext(android.content.Context)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.baseflow.geolocator.location.NmeaClient: void stop()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void lambda$dequeueImage$0()
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] $values()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.baseflow.geolocator.permission.PermissionManager: int indexOf(java.lang.Object[],java.lang.Object)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.baseflow.geolocator.LocationServiceHandlerImpl: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.baseflow.geolocator.StreamHandlerImpl: void setForegroundLocationService(com.baseflow.geolocator.GeolocatorLocationService)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.baseflow.geolocator.location.LocationManagerClient: void onLocationChanged(android.location.Location)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean isAlgorithmicDarkeningAllowed()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.plugins.webviewflutter.JavaScriptChannel: void postMessage(java.lang.String)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void maybeWaitOnFence(android.media.Image)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.WebStorage getWebStorage()
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationCallback access$100(com.baseflow.geolocator.location.FusedLocationClient)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.baseflow.geolocator.MethodCallHandlerImpl: void onCancelGetCurrentPosition(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String getType(android.net.Uri)
com.baseflow.geolocator.location.LocationMapper: boolean isMocked(android.location.Location)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: FlutterRenderer$ImageReaderSurfaceProducer(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.baseflow.geolocator.errors.ErrorCallback: void onError(com.baseflow.geolocator.errors.ErrorCodes)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Map getWebViewMediaIntegrityApiOverrideRules()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: android.util.DisplayMetrics getRearDisplayMetrics()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
com.baseflow.geolocator.location.LocationServiceListener: void onLocationServiceError(com.baseflow.geolocator.errors.ErrorCodes)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.baseflow.geolocator.permission.PermissionUtils: PermissionUtils()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: boolean deleteProfile(java.lang.String)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.baseflow.geolocator.MethodCallHandlerImpl: void getLocationAccuracy(io.flutter.plugin.common.MethodChannel$Result,android.content.Context)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.baseflow.geolocator.GeolocatorLocationService: android.os.IBinder onBind(android.content.Intent)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
io.flutter.view.TextureRegistry$ImageConsumer: android.media.Image acquireLatestImage()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void maybeWaitOnFence(android.media.Image)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: boolean onCreate()
androidx.core.location.LocationCompat$Api26Impl: boolean hasVerticalAccuracy(android.location.Location)
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
com.baseflow.geolocator.location.LocationManagerClient: void stopPositionUpdates()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
com.baseflow.geolocator.GeolocatorLocationService: void lambda$startLocationService$1(io.flutter.plugin.common.EventChannel$EventSink,com.baseflow.geolocator.errors.ErrorCodes)
com.baseflow.geolocator.location.GeolocationManager: com.baseflow.geolocator.location.GeolocationManager getInstance()
com.baseflow.geolocator.location.GeolocationManager: void startPositionUpdates(com.baseflow.geolocator.location.LocationClient,android.app.Activity,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.baseflow.geolocator.MethodCallHandlerImpl: void onCheckPermission(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.baseflow.geolocator.permission.LocationPermission: LocationPermission(java.lang.String,int)
io.flutter.plugins.webviewflutter.ConsoleMessageLevel: io.flutter.plugins.webviewflutter.ConsoleMessageLevel[] values()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannels(android.app.NotificationManager,java.util.List)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void finalize()
com.baseflow.geolocator.location.BackgroundNotification: void updateOptions(com.baseflow.geolocator.location.ForegroundNotificationOptions,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id()
com.baseflow.geolocator.MethodCallHandlerImpl: void onRequestPermission(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: android.util.DisplayMetrics getWindowAreaDisplayMetrics()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback access$200(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor,boolean)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebauthnSupport(int)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.baseflow.geolocator.MethodCallHandlerImpl: void lambda$getLocationAccuracy$2(io.flutter.plugin.common.MethodChannel$Result,com.baseflow.geolocator.errors.ErrorCodes)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.baseflow.geolocator.MethodCallHandlerImpl: void stopListening()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
com.baseflow.geolocator.permission.PermissionManager: PermissionManager()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
com.baseflow.geolocator.MethodCallHandlerImpl: void onGetLastKnownPosition(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void setCurrentPlayTime(android.animation.AnimatorSet,long)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebauthnSupport()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.webkit.WebViewClientCompat: WebViewClientCompat()
com.baseflow.geolocator.MethodCallHandlerImpl: void lambda$onGetCurrentPosition$5(boolean[],com.baseflow.geolocator.location.LocationClient,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,android.location.Location)
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
io.flutter.view.TextureRegistry$SurfaceProducer: void scheduleFrame()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.browser.customtabs.CustomTabsIntent$Api23Impl: android.app.ActivityOptions makeBasicActivityOptions()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void addRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
com.baseflow.geolocator.R: R()
io.flutter.view.TextureRegistry$SurfaceProducer: int getWidth()
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
com.baseflow.geolocator.GeolocatorPlugin: void unbindForegroundService(android.content.Context)
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean isEnableWifiLock()
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] $values()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.baseflow.geolocator.GeolocatorLocationService: boolean onUnbind(android.content.Intent)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
androidx.core.app.NotificationManagerCompat$Api26Impl: android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.baseflow.geolocator.location.GeolocationManager: GeolocationManager()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
xyz.luan.audioplayers.PlayerMode: xyz.luan.audioplayers.PlayerMode[] values()
com.baseflow.geolocator.location.LocationServiceStatusReceiver: LocationServiceStatusReceiver(io.flutter.plugin.common.EventChannel$EventSink)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.CookieManager getCookieManager()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
com.baseflow.geolocator.MethodCallHandlerImpl: void lambda$onGetCurrentPosition$6(boolean[],com.baseflow.geolocator.location.LocationClient,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,com.baseflow.geolocator.errors.ErrorCodes)
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
kotlin.collections.AbstractList: AbstractList()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
com.baseflow.geolocator.location.LocationManagerClient: java.lang.String determineProvider(android.location.LocationManager,com.baseflow.geolocator.location.LocationAccuracy)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
com.baseflow.geolocator.StreamHandlerImpl: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.Integer getColor()
com.baseflow.geolocator.location.LocationClient: void isLocationServiceEnabled(com.baseflow.geolocator.location.LocationServiceListener)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
com.baseflow.geolocator.permission.PermissionManager: void requestPermission(android.app.Activity,com.baseflow.geolocator.permission.PermissionResultCallback,com.baseflow.geolocator.errors.ErrorCallback)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
com.baseflow.geolocator.location.LocationOptions: long getTimeInterval()
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromActivityForConfigChanges()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.baseflow.geolocator.location.LocationClient: void stopPositionUpdates()
com.baseflow.geolocator.location.FlutterLocationServiceListener: FlutterLocationServiceListener(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
io.flutter.view.TextureRegistry$ImageTextureEntry: long id()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler getMessagePayload()
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String getNotificationText()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.ServiceWorkerController getServiceWorkerController()
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] values()
com.baseflow.geolocator.utils.Utils: boolean openLocationSettings(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getBackForwardCacheEnabled()
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] values()
com.baseflow.geolocator.location.LocationManagerClient: void onProviderEnabled(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] values()
com.baseflow.geolocator.location.LocationOptions: com.baseflow.geolocator.location.LocationOptions parseArguments(java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.flutter.view.TextureRegistry$SurfaceProducer: int getHeight()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.baseflow.geolocator.MethodCallHandlerImpl: void lambda$onGetLastKnownPosition$3(io.flutter.plugin.common.MethodChannel$Result,android.location.Location)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: java.lang.String getVariationsHeader()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.baseflow.geolocator.location.LocationManagerClient: void onStatusChanged(java.lang.String,int,android.os.Bundle)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
com.baseflow.geolocator.location.ServiceStatus: ServiceStatus(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannel(android.app.NotificationManager,java.lang.String)
com.baseflow.geolocator.GeolocatorLocationService: void disableBackgroundMode()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.baseflow.geolocator.location.LocationManagerClient: LocationManagerClient(android.content.Context,com.baseflow.geolocator.location.LocationOptions)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
androidx.core.location.LocationCompat$Api26Impl: void removeVerticalAccuracy(android.location.Location)
com.baseflow.geolocator.location.NmeaClient: void enrichExtrasWithNmea(android.location.Location)
io.flutter.view.TextureRegistry$SurfaceProducer: long id()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebViewMediaIntegrityApiStatus(int,java.util.Map)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.net.Uri cache(byte[],java.lang.String,java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean shouldUpdate()
io.flutter.view.TextureRegistry$SurfaceProducer: void setSize(int,int)
androidx.core.location.LocationCompat$Api26Impl: void setBearingAccuracyDegrees(android.location.Location,float)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
androidx.core.location.LocationCompat$Api26Impl: void removeSpeedAccuracy(android.location.Location)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void startRearDisplaySession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
androidx.tracing.TraceApi29Impl: boolean isEnabled()
io.flutter.plugins.webviewflutter.WebViewProxyApi$WebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.example.flutter_application_2.MainActivity: MainActivity()
com.baseflow.geolocator.location.AndroidIconResource: com.baseflow.geolocator.location.AndroidIconResource parseArguments(java.util.Map)
androidx.core.location.LocationCompat$Api26Impl: float getBearingAccuracyDegrees(android.location.Location)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.baseflow.geolocator.location.LocationAccuracyManager: com.baseflow.geolocator.location.LocationAccuracyStatus getLocationAccuracy(android.content.Context,com.baseflow.geolocator.errors.ErrorCallback)
com.baseflow.geolocator.errors.ErrorCodes: ErrorCodes(java.lang.String,int)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.baseflow.geolocator.location.LocationServiceStatusReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSpeculativeLoadingStatus(int)
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: long totalDuration(android.animation.AnimatorSet)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
